// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`19001e`, img`
.........................
.........................
............22222222.....
.......2......22222......
.............2222222.....
...222.....222222222.....
...2222222.....222222....
...22222222222222222.....
...22222222222222222.....
...22222222222222222.....
....2222222222222222.....
....2222222222222222.....
....222222222222222222...
....2222222222222222222..
...2222222222222222222222
..22222222222222222222222
..22222222222222222222222
...2222222222222222222222
...2222222222222222222222
...2222222222222222222222
...2222222222222222222222
...2222222222222222222222
...222222222222222..22222
...2.22................22
........................2
.....2...................
.........................
.........................
2222222222222222222222222
2222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.builtin.brick], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`19001e`, img`
.........................
.........................
.........................
.........................
...................222222
................22.......
.........2....2..........
.........2....2..........
.........2....2..........
......222222222..........
.........................
..2......................
..2......................
..22222..................
......22.................
......2..................
.........................
........222222222........
............2............
............2............
.................22222...
...................2.....
...................2.....
.........222222....2.....
.........................
...22222.................
.........................
.........................
2222222222222222222222222
2222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleInsignia,myTiles.tile4,myTiles.tile5,sprites.builtin.coral5,sprites.builtin.coral0,myTiles.tile7], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`19001e`, img`
.........................
.........................
.........................
........22222222.........
.........................
.................22222...
..222222.................
.........................
...........2222222.......
.........................
........22...............
........2................
........2................
........22222............
.........................
..............2..........
..............2..........
..............2..........
.............2222........
.........................
............2............
.................2.......
..........2......22222...
..........2...2..........
.......2222..............
....22.........22222.....
.........................
.........................
2222222222222222222222222
2222222222222222222222222
`, [myTiles.transparency16,myTiles.tile4,myTiles.tile5,sprites.dungeon.floorLight0,sprites.dungeon.chestClosed], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile":
            case "tile1":return tile1;
            case "tile0":
            case "tile2":return tile2;
            case "tile4":
            case "tile3":return tile3;
            case "tile5":
            case "tile4":return tile4;
            case "tile6":
            case "tile5":return tile5;
            case "tile7":
            case "tile6":return tile6;
            case "tile8":
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
